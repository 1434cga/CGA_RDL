
/*!! vif Inheritance CGA start-------------------------------------------------*/		
#include <services/vifManagerService/IvifManagerService.h>
#include <services/vifManagerService/IvifManagerReceiver.h>
#include <services/vifManagerService/IvifManagerServiceType.h>
/*!! vif Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/		
#include <services/HMIManagerService/IHMIManagerService.h>
#include <services/HMIManagerService/IHMIManagerServiceType.h>
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! Audio Inheritance CGA start-------------------------------------------------*/ 
#include <services/AudioManagerService/IAudioManagerService.h>
#include <services/AudioManagerService/IAudioManagerServiceType.h>
/*!! Audio Inheritance CGA end-------------------------------------------------*/

#include <utils/watchdog/watchdog_client.h>

#include "DiagInputManager.h"
#include "DiagManagerService.h"
#include "services/DiagManagerService/DiagCommand.h"
#include "services/DiagManagerService/OEM_Diag_Hal_Access.h"
#include "services/DiagManagerService/OEM_Diag_Defines.h"

#include "HMIType.h"

DiagInputManager::DiagInputManager(android::sp<DiagManagerService> diagMgrService)
		: mDiagMgrService(diagMgrService), each_packet_ptr(0), mDiagInputMgrTimer(NULL)
{

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
	mAppManager = NULL;
    mSystemPostReceiver = NULL;
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 
/*!! audio Inheritance CGA start-------------------------------------------------*/		
	mAudioManager = NULL;
    mAudioReceiver = NULL;
    mAudioPostReceiver = NULL;
/*!! audio Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/		
	mHmiManager = NULL;
    mHmiReceiver = NULL;
    mHmiPostReceiver = NULL;
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! vif Inheritance CGA start-------------------------------------------------*/		
	mVifManager = NULL;
    mVifReceiver = NULL;
    mVifPostReceiver = NULL;
/*!! vif Inheritance CGA end-------------------------------------------------*/


    isLongBufferActive = false;
    memset(longDataBuffer, 0U, DIAGDATA_BUFSIZE);

}

DiagInputManager::~DiagInputManager()
{
    if (mDiagInputMgrTimer != NULL) {
        delete mDiagInputMgrTimer;
    }
}

error_t DiagInputManager::init()
{
    error_t result = E_OK;
    mServiceDeathRecipient = new ServiceDeathRecipient(*this);
    mProcessDataManager = new ProcessDataManager(this);

    result = mProcessDataManager->init();
    mMyHandler = new DiagHandler(mDiagMgrService->looper(), *this);

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
    connectToAppMgr();
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 
/*!! audio Inheritance CGA start-------------------------------------------------*/		
    connectToAudioMgr();
/*!! audio Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/		
    connectToHmiMgr();
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! vif Inheritance CGA start-------------------------------------------------*/		
    connectToVifMgr();
/*!! vif Inheritance CGA end-------------------------------------------------*/


    mDiagInputMgrTimer = new DiagInputMgrTimer (mMyHandler);
    m_WatcdogTimer = new Timer (mDiagInputMgrTimer, DiagInputMgrTimer::DIAG_WATCHDOG_TIMER);
    mDIDStartTimer = new Timer (mDiagInputMgrTimer, DiagInputMgrTimer::BOOT_COMPLETE_TIME_OUT);

    m_WatcdogTimer->setDuration(WATCHDOG_START_DURATION, WATCHDOG_TIME_OUT);
    m_WatcdogTimer->start();
    HeartBeat_Ready();

    return result;
}

void DiagInputManager::DiagHandler::handleMessage(const android::sp<sl::Message>& msg)
{
    const int32_t what = msg->what;

    android::sp<Buffer> buf = new Buffer();
    if (msg->buffer.size() > 0) {
        buf->setTo(msg->buffer.data(), msg->buffer.size());
    }

    switch (what) {

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
	case MSG_CONNECT_TO_APPMGR:
        LOGV("handleMessage MSG_CONNECT_TO_APPMGR");
        mDiagInputMgr.connectToAppMgr();
        break;

    case MSG_RECEIVE_BOOT_COMPLETE:
	    LOGV("handleMessage MSG_RECEIVE_BOOT_COMPLETE");
	    mDiagInputMgr.TimerStart();
	    break;	
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 
/*!! audio Inheritance CGA start-------------------------------------------------*/		
    case MSG_CONNECT_TO_AUDIOMGR:
        LOGV("handleMessage MSG_CONNECT_TO_AUDIOMGR");
        mDiagInputMgr.connectToAudioMgr();
        break;
		
	case MSG_RECEIVE_FROM_AUDIO:
		LOGV("handleMessage MSG_RECEIVE_FROM_AUDIO sigID : %x", msg->arg1);
		mDiagInputMgr.messagefromAudio((uint16_t)msg->arg1, buf);
		break;
/*!! audio Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/		
    case MSG_CONNECT_TO_HMIMGR:
        LOGV("handleMessage MSG_CONNECT_TO_HMIMGR");
        mDiagInputMgr.connectToHmiMgr();
        break;
		
	case MSG_RECEIVE_FROM_HMI:
		LOGV("handleMessage MSG_RECEIVE_FROM_HMI sigID : %x", msg->arg1);
		mDiagInputMgr.messagefromHmi((uint16_t)msg->arg1, buf);
		break;
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! vif Inheritance CGA start-------------------------------------------------*/		
    case MSG_CONNECT_TO_VIFMGR:
        LOGV("handleMessage MSG_CONNECT_TO_VIFMGR");
        mDiagInputMgr.connectToVifMgr();
        break;
		
	case MSG_RECEIVE_FROM_VIF:
		LOGV("handleMessage MSG_RECEIVE_FROM_VIF sigID : %x", msg->arg1);
		mDiagInputMgr.messagefromVif((uint16_t)msg->arg1, buf);
		break;
/*!! vif Inheritance CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_? case CGA start-------------------------------------------------*/
    //case MSG_DID_WORK_FOR_DEFINE_1:
        //LOGV("handleMessage MSG_DID_WORK_FOR_DEFINE_1");
        //mDiagInputMgr.DID_WORK_FOR_DEFINE(msg->arg1);
        //break;
    case DID_WORK_FOR_DEFINE_0:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_0");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_0(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_1:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_1");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_1(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_2:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_2");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_2(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_3:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_3");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_3(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_4:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_4");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_4(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_5:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_5");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_5(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_6:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_6");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_6(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_7:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_7");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_7(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_8:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_8");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_8(msg->arg1);
        break;
    case DID_WORK_FOR_DEFINE_9:
        LOGV("handleMessage DID_WORK_FOR_DEFINE_9");
        mDiagInputMgr.DID_WORK_FOR_DEFINE_9(msg->arg1);
        break;
/*!! DID_WORK_FOR_DEFINE_? case CGA end-------------------------------------------------*/

    case MSG_DIAGDATA_QUEUE:
        LOGV("handleMessage MSG_DIAGDATA_QUEUE");
        // mDiagInputMgr.sendingData(buf);
        break;
		
	case MSG_RECEIVE_WATCH_DOG:
		LOGV("handleMessage MSG_RECEIVE_WATCH_DOG");
		HeartBeat();
		break;
	
	case MSG_BOOT_COMPLETE_DID_START:
		LOGV("handleMessage MSG_BOOT_COMPLETE_DID_START");
		// mDiagInputMgr.TimerStop();
		break;

    default:
        LOGV("Wrong Message received.[%8x]", what);
        break;
    }
}
/*!! audio Inheritance CGA start-------------------------------------------------*/ 
void DiagInputManager::connectToAudioMgr(void)
{
    mAudioManager = android::interface_cast<IaudioManagerService>
                (android::defaultServiceManager()->getService(android::String16(audio_SRV_NAME)));

    if (mAudioManager != NULL) {
                android::IInterface::asBinder(mAudioManager)->linkToDeath(mServiceDeathRecipient);
                LOGV("connectToAudioMgr: audioManagerService OK...");
    } else {
        LOGE("mAudioManager is NULL retry in 500ms");
        if (mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(DiagHandler::MSG_CONNECT_TO_audioMGR),
                                            DiagHandler::TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectToAudioMgr: mMyHandler is null");
        }
        return;
    }

    if (mAudioReceiver == NULL) {
        mAudioReceiver = new AudioReceiver(mMyHandler);
    } else {
        LOGV("Already mAudioReceiver was created.");
    }

// @CGA_VARIANT_START{"DiagInputManager.cpp:DiagInputManager:connectToAudioMgr(void):variant"}
    /*  
     *  DATA :: ^**^
     */
// @CGA_VARIANT_END{"DiagInputManager.cpp:DiagInputManager:connectToAudioMgr(void):variant"}
}
/*!! audio Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/ 
void DiagInputManager::connectToHmiMgr(void)
{
    mHmiManager = android::interface_cast<IhmiManagerService>
                (android::defaultServiceManager()->getService(android::String16(hmi_SRV_NAME)));

    if (mHmiManager != NULL) {
                android::IInterface::asBinder(mHmiManager)->linkToDeath(mServiceDeathRecipient);
                LOGV("connectToHmiMgr: hmiManagerService OK...");
    } else {
        LOGE("mHmiManager is NULL retry in 500ms");
        if (mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(DiagHandler::MSG_CONNECT_TO_hmiMGR),
                                            DiagHandler::TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectToHmiMgr: mMyHandler is null");
        }
        return;
    }

    if (mHmiReceiver == NULL) {
        mHmiReceiver = new HmiReceiver(mMyHandler);
    } else {
        LOGV("Already mHmiReceiver was created.");
    }

// CGA_VARIANT:DiagInputManager.cpp:DiagInputManager:connectToHmiMgr(void):variant START
```cpp
    main() { a = 1; b=2;
    a += 3;
    printf("%d",a);
    }
```
// CGA_VARIANT:DiagInputManager.cpp:DiagInputManager:connectToHmiMgr(void):variant END
}
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! vif Inheritance CGA start-------------------------------------------------*/ 
void DiagInputManager::connectToVifMgr(void)
{
    mVifManager = android::interface_cast<IvifManagerService>
                (android::defaultServiceManager()->getService(android::String16(vif_SRV_NAME)));

    if (mVifManager != NULL) {
                android::IInterface::asBinder(mVifManager)->linkToDeath(mServiceDeathRecipient);
                LOGV("connectToVifMgr: vifManagerService OK...");
    } else {
        LOGE("mVifManager is NULL retry in 500ms");
        if (mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(DiagHandler::MSG_CONNECT_TO_vifMGR),
                                            DiagHandler::TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectToVifMgr: mMyHandler is null");
        }
        return;
    }

    if (mVifReceiver == NULL) {
        mVifReceiver = new VifReceiver(mMyHandler);
    } else {
        LOGV("Already mVifReceiver was created.");
    }

// CGA_VARIANT:DiagInputManager.cpp:DiagInputManager:connectToVifMgr(void):variant START

    /*  
     * variant code for you
    */

// CGA_VARIANT:DiagInputManager.cpp:DiagInputManager:connectToVifMgr(void):variant END
}
/*!! vif Inheritance CGA end-------------------------------------------------*/

void DiagInputManager::onServiceBinderDied(const android::wp<android::IBinder>& who)
{
/*!! appmgr Inheritance CGA start-------------------------------------------------*/ 		
    if (mAppManager != NULL && android::IInterface::asBinder(mAppManager) == who) {
        LOGW("killed AppManager!!");
        connectToAppMgr();
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 
/*!! audio Inheritance CGA start-------------------------------------------------*/ 
    } else if (mAudioManager != NULL && android::IInterface::asBinder(mAudioManager) == who) {
        LOGW("killed mAudioManager!!");
        connectToAudioMgr();
/*!! audio Inheritance CGA end-------------------------------------------------*/
/*!! hmi Inheritance CGA start-------------------------------------------------*/ 
    } else if (mHmiManager != NULL && android::IInterface::asBinder(mHmiManager) == who) {
        LOGW("killed mHmiManager!!");
        connectToHmiMgr();
/*!! hmi Inheritance CGA end-------------------------------------------------*/
/*!! vif Inheritance CGA start-------------------------------------------------*/ 
    } else if (mVifManager != NULL && android::IInterface::asBinder(mVifManager) == who) {
        LOGW("killed mVifManager!!");
        connectToVifMgr();
/*!! vif Inheritance CGA end-------------------------------------------------*/
    } else {
        LOGE("nothing!! onServiceBinderDied()");
    }
}

error_t DiagInputManager::messagefrom_SOMEIP(uint16_t sigId, android::sp<Buffer>& buf)
{
	error_t result = E_OK;
	return result;
}

error_t DiagInputManager::messagefromVIF(uint16_t sigId, android::sp<Buffer>& buf)
{
	error_t result = E_OK;
	return result;
}

/*!! DID_WORK_FOR_DEFINE_0 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_0(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_0 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_1 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_1(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_1 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_2 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_2(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_2 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_3 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_3(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_3 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_4 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_4(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_4 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_5 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_5(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_5 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_6 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_6(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_6 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_7 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_7(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_7 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_8 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_8(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_8 func body CGA end-------------------------------------------------*/

/*!! DID_WORK_FOR_DEFINE_9 func body CGA start-------------------------------------------------*/
error_t DiagInputManager::DID_WORK_FOR_DEFINE_9(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/*!! DID_WORK_FOR_DEFINE_9 func body CGA end-------------------------------------------------*/


