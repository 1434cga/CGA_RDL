FileName : src/2_example.cpp
Set : $iterateInputFileName = DiagInputManager.cpp
Set : $iterate_comments = OFF

IFEQUAL(+<+$Related_Manager{vif}{VALUE}+>+  eq "O")+{{+
/* vif Inheritance CGA start-------------------------------------------------*/		
#include <services/vifManagerService/IvifManagerService.h>
#include <services/vifManagerService/IvifManagerReceiver.h>
#include <services/vifManagerService/IvifManagerServiceType.h>
/* vif Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{system}{VALUE}+>+  eq "O")+{{+
#include <services/SystemManagerService/ISystemReceiver.h>
#include <services/SystemManagerService/ISystemManagerService.h>
#include <services/SystemManagerService/ISystemManagerServiceType.h>
/* system Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{hmi}{VALUE}+>+  eq "O")+{{+
/* hmi Inheritance CGA start-------------------------------------------------*/		
#include <services/HMIManagerService/IHMIManagerService.h>
#include <services/HMIManagerService/IHMIManagerServiceType.h>
/* hmi Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{loc}{VALUE}+>+  eq "O")+{{+
/* loc Inheritance CGA start-------------------------------------------------*/		
#include <services/LocationManagerService/ILocationManagerService.h>
#include <services/LocationManagerService/ILocationManagerServiceType.h>
/* loc Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{audio}{VALUE}+>+  eq "O")+{{+
/* Audio Inheritance CGA start-------------------------------------------------*/ 
#include <services/AudioManagerService/IAudioManagerService.h>
#include <services/AudioManagerService/IAudioManagerServiceType.h>
/* Audio Inheritance CGA end-------------------------------------------------*/	
+}}+

#include <utils/watchdog/watchdog_client.h>

#include "DiagInputManager.h"
#include "DiagManagerService.h"
#include "services/DiagManagerService/DiagCommand.h"
#include "services/DiagManagerService/OEM_Diag_Hal_Access.h"
#include "services/DiagManagerService/OEM_Diag_Defines.h"

#include "HMIType.h"


class DiagInputManager {
    DiagInputManager(android::sp<DiagManagerService> diagMgrService);
    ~DiagInputManager();
    error_t init();
    void handleMessage(const android::sp<sl::Message>& msg);
    void connectToAudioMgr(void);
    void connectToHmiMgr(void);
    void connectToVifMgr(void);
    void onServiceBinderDied(const android::wp<android::IBinder>& who);
    error_t DID_WORK_FOR_DEFINE_0(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_1(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_2(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_3(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_4(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_5(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_6(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_7(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_8(android::sp<DiagData>& mdiagData);
    error_t DID_WORK_FOR_DEFINE_9(android::sp<DiagData>& mdiagData);
};


/**
 * @CGA_VARIANT_START{"DiagInputManager::DiagInputManager(void)"}
 * AAA
 * @CGA_VARIANT___END{"DiagInputManager::DiagInputManager(void)"}
 */
DiagInputManager::DiagInputManager(android::sp<DiagManagerService> diagMgrService)
		: mDiagMgrService(diagMgrService), each_packet_ptr(0), mDiagInputMgrTimer(NULL)
{

/* appmgr Inheritance CGA start-------------------------------------------------*/		
	mAppManager = NULL;
    mSystemPostReceiver = NULL;
/* appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/* ITKEY Inheritance CGA start-------------------------------------------------*/		
	m+<+ucfirst("ITKEY")+>+Manager = NULL;
    m+<+ucfirst("ITKEY")+>+Receiver = NULL;
    m+<+ucfirst("ITKEY")+>+PostReceiver = NULL;
/* ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+

+>>+

    isLongBufferActive = false;
    memset(longDataBuffer, 0U, DIAGDATA_BUFSIZE);

}

/**
 * @brief destructor
 * @CGA_VARIANT_START{"DiagInputManager::~DiagInputManager(void)"}
 * BBB
 * @CGA_VARIANT_END{"DiagInputManager::~DiagInputManager(void)"}
 */
DiagInputManager::~DiagInputManager()
{
    if (mDiagInputMgrTimer != NULL) {
        delete mDiagInputMgrTimer;
    }
}

// @brief init
error_t DiagInputManager::init()
{
    error_t result = E_OK;
    mServiceDeathRecipient = new ServiceDeathRecipient(*this);
    mProcessDataManager = new ProcessDataManager(this);

    result = mProcessDataManager->init();
    mMyHandler = new DiagHandler(mDiagMgrService->looper(), *this);

/* appmgr Inheritance CGA start-------------------------------------------------*/		
    connectToAppMgr();
/* appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/* ITKEY Inheritance CGA start-------------------------------------------------*/		
    connectTo+<+ucfirst("ITKEY")+>+Mgr();
/* ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+


    mDiagInputMgrTimer = new DiagInputMgrTimer (mMyHandler);
    m_WatcdogTimer = new Timer (mDiagInputMgrTimer, DiagInputMgrTimer::DIAG_WATCHDOG_TIMER);
    mDIDStartTimer = new Timer (mDiagInputMgrTimer, DiagInputMgrTimer::BOOT_COMPLETE_TIME_OUT);

    m_WatcdogTimer->setDuration(WATCHDOG_START_DURATION, WATCHDOG_TIME_OUT);
    m_WatcdogTimer->start();
    HeartBeat_Ready();

    return result;
}

void DiagInputManager::handleMessage(const android::sp<sl::Message>& msg)
{
    const int32_t what = msg->what;

    android::sp<Buffer> buf = new Buffer();
    if (msg->buffer.size() > 0) {
        buf->setTo(msg->buffer.data(), msg->buffer.size());
    }

    switch (what) {

/* appmgr Inheritance CGA start-------------------------------------------------*/		
	case MSG_CONNECT_TO_APPMGR:
        LOGV("handleMessage MSG_CONNECT_TO_APPMGR");
        mDiagInputMgr.connectToAppMgr();
        break;

    case MSG_RECEIVE_BOOT_COMPLETE:
	    LOGV("handleMessage MSG_RECEIVE_BOOT_COMPLETE");
	    mDiagInputMgr.TimerStart();
	    break;	
/* appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/* ITKEY Inheritance CGA start-------------------------------------------------*/		
    case MSG_CONNECT_TO_+<+uc(ITKEY)+>+MGR:
        LOGV("handleMessage MSG_CONNECT_TO_+<+uc(ITKEY)+>+MGR");
        mDiagInputMgr.connectTo+<+ucfirst("ITKEY")+>+Mgr();
        break;
		
	case MSG_RECEIVE_FROM_+<+uc(ITKEY)+>+:
		LOGV("handleMessage MSG_RECEIVE_FROM_+<+uc(ITKEY)+>+ sigID : %x", msg->arg1);
		mDiagInputMgr.messagefrom+<+ucfirst("ITKEY")+>+((uint16_t)msg->arg1, buf);
		break;
/* ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+

/* DID_WORK_FOR_DEFINE_? case CGA start-------------------------------------------------*/
    //case MSG_DID_WORK_FOR_DEFINE_1:
        //LOGV("handleMessage MSG_DID_WORK_FOR_DEFINE_1");
        //mDiagInputMgr.DID_WORK_FOR_DEFINE(msg->arg1);
        //break;
ITERATE %Function +<<+ ITKEY  ITVALUE
    case ITKEY:
        LOGV("handleMessage ITKEY");
        mDiagInputMgr.ITKEY(msg->arg1);
        break;
+>>+
/* DID_WORK_FOR_DEFINE_? case CGA end-------------------------------------------------*/

    case MSG_DIAGDATA_QUEUE:
        LOGV("handleMessage MSG_DIAGDATA_QUEUE");
        // mDiagInputMgr.sendingData(buf);
        break;
		
	case MSG_RECEIVE_WATCH_DOG:
		LOGV("handleMessage MSG_RECEIVE_WATCH_DOG");
		HeartBeat();
		break;
	
	case MSG_BOOT_COMPLETE_DID_START:
		LOGV("handleMessage MSG_BOOT_COMPLETE_DID_START");
		// mDiagInputMgr.TimerStop();
		break;

    default:
        LOGV("Wrong Message received.[%8x]", what);
        break;
    }
}

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/**
 * @brief Everything is nothing
 *
 * @CGA_VARIANT_START{"DiagInputManager::connectTo+<+ucfirst("ITKEY")+>+Mgr(void)"}
 * @SRS{FR-001,"EveryThing is fine."}
 * @CGA_VARIANT_END{"DiagInputManager::connectTo+<+ucfirst("ITKEY")+>+Mgr(void)"}
 *
 */
void DiagInputManager::connectTo+<+ucfirst("ITKEY")+>+Mgr(void)
{
    m+<+ucfirst("ITKEY")+>+Manager = android::interface_cast<IITKEYManagerService>
                (android::defaultServiceManager()->getService(android::String16(ITKEY_SRV_NAME)));

    if (m+<+ucfirst("ITKEY")+>+Manager != NULL) {
                android::IInterface::asBinder(m+<+ucfirst("ITKEY")+>+Manager)->linkToDeath(mServiceDeathRecipient);
                LOGV("connectTo+<+ucfirst("ITKEY")+>+Mgr: ITKEYManagerService OK...");
    } else {
        LOGE("m+<+ucfirst("ITKEY")+>+Manager is NULL retry in 500ms");
        if (mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(DiagHandler::MSG_CONNECT_TO_ITKEYMGR),
                                            DiagHandler::TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectTo+<+ucfirst("ITKEY")+>+Mgr: mMyHandler is null");
        }
        return;
    }

    if (m+<+ucfirst("ITKEY")+>+Receiver == NULL) {
        m+<+ucfirst("ITKEY")+>+Receiver = new +<+ucfirst("ITKEY")+>+Receiver(mMyHandler);
    } else {
        LOGV("Already m+<+ucfirst(ITKEY)+>+Receiver was created.");
    }

// CGA_VARIANT:+<+$iterateInputFileName+>+:DiagInputManager:connectTo+<+ucfirst("ITKEY")+>+Mgr(void):variant START

    /*  
     * Write your own code 
    */

// CGA_VARIANT:+<+$iterateInputFileName+>+:DiagInputManager:connectTo+<+ucfirst("ITKEY")+>+Mgr(void):variant END
}

+}}+
+>>+

void DiagInputManager::onServiceBinderDied(const android::wp<android::IBinder>& who)
{
/* appmgr Inheritance CGA start-------------------------------------------------*/ 		
    if (mAppManager != NULL && android::IInterface::asBinder(mAppManager) == who) {
        LOGW("killed AppManager!!");
        connectToAppMgr();
/* appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/* ITKEY Inheritance CGA start-------------------------------------------------*/ 
    } else if (m+<+ucfirst("ITKEY")+>+Manager != NULL && android::IInterface::asBinder(m+<+ucfirst("ITKEY")+>+Manager) == who) {
        LOGW("killed m+<+ucfirst("ITKEY")+>+Manager!!");
        connectTo+<+ucfirst("ITKEY")+>+Mgr();
/* ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+
    } else {
        LOGE("nothing!! onServiceBinderDied()");
    }
}

ITERATE %Function +<<+ ITKEY  ITVALUE
/* ITKEY func body CGA start-------------------------------------------------*/
error_t DiagInputManager::ITKEY(android::sp<DiagData>& mdiagData)
{
	error_t result = E_OK;
	return result;
}
/* ITKEY func body CGA end-------------------------------------------------*/

+>>+

