stcI_HASH : Module_Name
stcI_FILEPREFIX : source/KEYManagerService/bin/
stcI_FILEPOSTFIX : InputManager
stcI_EXTENSION : cpp
Set : $iterate_comments = OFF
SetI : $MODULENAME = KEY
/*
 *   This software is copyright protected and proprietary to
 *   LG electronics. LGE grants to you only those rights as
 *   set out in the license conditions. All other rights remain
 *   with LG electronics.
 * \author  Jong Kyung Byun
 * \date    2017.11.14
 * \attention Copyright (c) 2015 by LG electronics co, Ltd. All rights reserved.
 */

#define LOG_TAG "+<+ucfirst($MODULENAME)+>+InputManager"

#include <Log.h>

#include <binder/IServiceManager.h>

/*!! appmgr Inheritance CGA start-------------------------------------------------*/ 
#include <services/ApplicationManagerService/IApplicationManagerService.h>
#include <services/ApplicationManagerService/IApplicationManagerServiceType.h>
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

IFEQUAL(+<+$Related_Manager{vif}{VALUE}+>+  eq "O")+{{+
/*!! vif Inheritance CGA start-------------------------------------------------*/		
#include <services/vifManagerService/IvifManagerService.h>
#include <services/vifManagerService/IvifManagerReceiver.h>
#include <services/vifManagerService/IvifManagerServiceType.h>
/*!! vif Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{system}{VALUE}+>+  eq "O")+{{+
#include <services/SystemManagerService/ISystemReceiver.h>
#include <services/SystemManagerService/ISystemManagerService.h>
#include <services/SystemManagerService/ISystemManagerServiceType.h>
/*!! system Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{hmi}{VALUE}+>+  eq "O")+{{+
/*!! hmi Inheritance CGA start-------------------------------------------------*/		
#include <services/HMIManagerService/IHMIManagerService.h>
#include <services/HMIManagerService/IHMIManagerServiceType.h>
/*!! hmi Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{loc}{VALUE}+>+  eq "O")+{{+
/*!! loc Inheritance CGA start-------------------------------------------------*/		
#include <services/LocationManagerService/ILocationManagerService.h>
#include <services/LocationManagerService/ILocationManagerServiceType.h>
/*!! loc Inheritance CGA end-------------------------------------------------*/ 
+}}+

IFEQUAL(+<+$Related_Manager{audio}{VALUE}+>+  eq "O")+{{+
/*!! Audio Inheritance CGA start-------------------------------------------------*/ 
#include <services/AudioManagerService/IAudioManagerService.h>
#include <services/AudioManagerService/IAudioManagerServiceType.h>
/*!! Audio Inheritance CGA end-------------------------------------------------*/	
+}}+

#include <utils/watchdog/watchdog_client.h>

#include "+<+ucfirst($MODULENAME)+>+InputManager.h"
#include "+<+ucfirst($MODULENAME)+>+ManagerService.h"
#include "services/+<+ucfirst($MODULENAME)+>+ManagerService/+<+ucfirst($MODULENAME)+>+Command.h"


#include "HMIType.h"

+<+ucfirst($MODULENAME)+>+InputManager::+<+ucfirst($MODULENAME)+>+InputManager(android::sp<+<+ucfirst($MODULENAME)+>+ManagerService> m+<+ucfirst($MODULENAME)+>+MgrService)
		: m+<+ucfirst($MODULENAME)+>+MgrService(m+<+ucfirst($MODULENAME)+>+MgrService),  m+<+ucfirst($MODULENAME)+>+InputMgrTimer(NULL)
{

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
	mAppManager = NULL;
    mSystemPostReceiver = NULL;
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/*!! ITKEY Inheritance CGA start-------------------------------------------------*/		
	m+<+ucfirst("ITKEY")+>+Manager = NULL;
    m+<+ucfirst("ITKEY")+>+Receiver = NULL;
/*!! ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+

+>>+

}

+<+ucfirst($MODULENAME)+>+InputManager::~+<+ucfirst($MODULENAME)+>+InputManager()
{
    if (m+<+ucfirst($MODULENAME)+>+InputMgrTimer != NULL) {
        delete m+<+ucfirst($MODULENAME)+>+InputMgrTimer;
    }
}

error_t +<+ucfirst($MODULENAME)+>+InputManager::init()
{
    error_t result = E_OK;
    mServiceDeathRecipient = new ServiceDeathRecipient(*this);

    mMyHandler = new +<+ucfirst($MODULENAME)+>+Handler(m+<+ucfirst($MODULENAME)+>+MgrService->looper(), *this);

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
    connectToAppMgr();
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/*!! ITKEY Inheritance CGA start-------------------------------------------------*/		
    connectTo+<+ $Related_Manager{ITKEY}{usingName} +>+Mgr();
/*!! ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+


    m+<+ucfirst($MODULENAME)+>+InputMgrTimer = new +<+ucfirst($MODULENAME)+>+InputMgrTimer (mMyHandler);
    m_WatcdogTimer = new Timer (m+<+ucfirst($MODULENAME)+>+InputMgrTimer, +<+ucfirst($MODULENAME)+>+InputMgrTimer::+<+uc($MODULENAME)+>+_WATCHDOG_TIMER);

    m_WatcdogTimer->setDuration(WATCHDOG_START_DURATION, WATCHDOG_TIME_OUT);
    m_WatcdogTimer->start();
    HeartBeat_Ready();

    return result;
}

void +<+ucfirst($MODULENAME)+>+InputManager::+<+ucfirst($MODULENAME)+>+Handler::handleMessage(const android::sp<sl::Message>& msg)
{
    const int32_t what = msg->what;

    android::sp<Buffer> buf = new Buffer();
    if (msg->buffer.size() > 0) {
        buf->setTo(msg->buffer.data(), msg->buffer.size());
    }

    switch (what) {

/*!! appmgr Inheritance CGA start-------------------------------------------------*/		
	case MSG_CONNECT_TO_APPMGR:
        LOGV("handleMessage MSG_CONNECT_TO_APPMGR");
        m+<+ucfirst($MODULENAME)+>+InputMgr.connectToAppMgr();
        break;

    case MSG_RECEIVE_BOOT_COMPLETE:
	    LOGV("handleMessage MSG_RECEIVE_BOOT_COMPLETE");
	    break;
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/*!! ITKEY Inheritance CGA start-------------------------------------------------*/		

    case MSG_CONNECT_TO_+<+uc(ITKEY)+>+MGR:
        LOGV("handleMessage MSG_CONNECT_TO_+<+uc(ITKEY)+>+MGR");
        m+<+ucfirst($MODULENAME)+>+InputMgr.connectTo+<+$Related_Manager{ITKEY}{usingName}+>+Mgr();
        break;
		
	case MSG_RECEIVE_FROM_+<+uc(ITKEY)+>+:
		LOGV("handleMessage MSG_RECEIVE_FROM_+<+uc(ITKEY)+>+ sigID : %x", msg->arg1);
		//m+<+ucfirst($MODULENAME)+>+InputMgr.messagefrom+<+ucfirst("ITKEY")+>+((uint16_t)msg->arg1, buf);
		break;
/*!! ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+

/*!! DID_WORK_FOR_DEFINE_? case CGA start-------------------------------------------------*/
ITERATE %Function +<<+ ITKEY  ITVALUE
    case MSG_ITKEY:
        LOGV("handleMessage ITKEY");
        m+<+ucfirst($MODULENAME)+>+InputMgr.FUNC_ITKEY(msg->arg1);
        break;
+>>+
/*!! DID_WORK_FOR_DEFINE_? case CGA end-------------------------------------------------*/
		
	case MSG_RECEIVE_WATCH_DOG:
		LOGV("handleMessage MSG_RECEIVE_WATCH_DOG");
		HeartBeat();
		break;
	
	case MSG_BOOT_COMPLETE_DID_START:
		LOGV("handleMessage MSG_BOOT_COMPLETE_DID_START");
			break;

    default:
        LOGV("Wrong Message received.[%8x]", what);
        break;
    }
}

/*!! appmgr Inheritance CGA start-------------------------------------------------*/ 
void +<+ucfirst($MODULENAME)+>+InputManager::connectToAppMgr(void)
{
    mAppManager = android::interface_cast<IApplicationManagerService>
                (android::defaultServiceManager()->getService(android::String16(APPLICATION_SRV_NAME)));

    if (mAppManager != NULL) {
        if (mAppManager->getBootCompleted()) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(MSG_RECEIVE_BOOT_COMPLETE),
                                            TIME_SEND_RETRY_DELAY_MS);
        } else {
            android::IInterface::asBinder(mAppManager)->linkToDeath(mServiceDeathRecipient);
            LOGV("connectToAppMgr: AppManager OK...");
        }
    } else {
        LOGE("appManager is NULL retry in 500ms");
        if(mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(MSG_CONNECT_TO_APPMGR),
                                            TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectToAppMgr: mMyHandler is null");
        }
        return;
    }

    if (mSystemPostReceiver == NULL) {
        mSystemPostReceiver = new +<+ucfirst($MODULENAME)+>+SystemPostReceiver(mMyHandler);
    } else {
        LOGV("Already mSystemPostReceiver was created.");
    }

    mAppManager->registerSystemPostReceiver(mSystemPostReceiver, SYS_POST_BOOT_COMPLETED);
}
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/*!! ITKEY Inheritance CGA start-------------------------------------------------*/ 
void +<+ucfirst($MODULENAME)+>+InputManager::connectTo+<+$Related_Manager{ITKEY}{usingName}+>+Mgr(void)
{
    m+<+ucfirst("ITKEY")+>+Manager = android::interface_cast<I+<+$Related_Manager{ITKEY}{usingName}+>+ManagerService>
                (android::defaultServiceManager()->getService(android::String16(+<+uc("ITKEY")+>+_SRV_NAME)));

    if (m+<+ucfirst("ITKEY")+>+Manager != NULL) {
                android::IInterface::asBinder(m+<+ucfirst("ITKEY")+>+Manager)->linkToDeath(mServiceDeathRecipient);
                LOGV("connectTo+<+ucfirst("ITKEY")+>+Mgr: ITKEYManagerService OK...");
    } else {
        LOGE("m+<+ucfirst("ITKEY")+>+Manager is NULL retry in 500ms");
        if (mMyHandler != NULL) {
            mMyHandler->sendMessageDelayed(mMyHandler->obtainMessage(MSG_CONNECT_TO_+<+uc("ITKEY")+>+MGR),
                                            TIME_SEND_RETRY_DELAY_MS);
        } else {
            LOGE("connectTo+<+$Related_Manager{ITKEY}{usingName}+>+Mgr: mMyHandler is null");
        }
        return;
    }

    if (m+<+ucfirst("ITKEY")+>+Receiver == NULL) {
        m+<+ucfirst("ITKEY")+>+Receiver = new ITKEYReceiver(mMyHandler);
    } else {
        LOGV("Already m+<+ucfirst(ITKEY)+>+Receiver was created.");
    }

//@CGA_VARIANT:+<+$iterateInputFileName+>+:+<+ucfirst($MODULENAME)+>+InputManager:connectTo+<+ucfirst("ITKEY")+>+Mgr(void):variant start
    //uint32_t Sigid;
    //Sigid = SIGNAL_INTERNAL_+<+uc($MODULENAME)+>+_BASE;
    //Sigid = (uint32_t)(CH_RPMSG<<24)| Sigid;
    //m+<+ucfirst("ITKEY")+>+Manager->registerReceiver(Sigid, ITKEY_received_always, m+<+ucfirst("ITKEY")+>+Receiver);
	// Do Something to regist Receiver
//@CGA_VARIANT:+<+$iterateInputFileName+>+:+<+ucfirst($MODULENAME)+>+InputManager:connectTo+<+ucfirst("ITKEY")+>+Mgr(void):variant end
}
/*!! ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+

void +<+ucfirst($MODULENAME)+>+InputManager::onServiceBinderDied(const android::wp<android::IBinder>& who)
{
/*!! appmgr Inheritance CGA start-------------------------------------------------*/ 		
    if (mAppManager != NULL && android::IInterface::asBinder(mAppManager) == who) {
        LOGW("killed AppManager!!");
        connectToAppMgr();
/*!! appmgr Inheritance CGA end-------------------------------------------------*/ 

ITERATE %Related_Manager +<<+ ITKEY  ITVALUE
IFEQUAL(+<+$Related_Manager{ITKEY}{VALUE}+>+  eq "O")+{{+
/*!! ITKEY Inheritance CGA start-------------------------------------------------*/ 
    } else if (m+<+ucfirst("ITKEY")+>+Manager != NULL && android::IInterface::asBinder(m+<+ucfirst("ITKEY")+>+Manager) == who) {
        LOGW("killed m+<+ucfirst("ITKEY")+>+Manager!!");
        connectTo+<+$Related_Manager{ITKEY}{usingName}+>+Mgr();
/*!! ITKEY Inheritance CGA end-------------------------------------------------*/ 
+}}+
+>>+
    } else {
        LOGE("nothing!! onServiceBinderDied()");
    }
}

ITERATE %Function +<<+ ITKEY  ITVALUE
/*!! ITKEY func body CGA start-------------------------------------------------*/
error_t +<+ucfirst($MODULENAME)+>+InputManager::FUNC_ITKEY(uint8_t* data)
{
	error_t result = E_OK;
	return result;
}
/*!! ITKEY func body CGA end-------------------------------------------------*/

+>>+
