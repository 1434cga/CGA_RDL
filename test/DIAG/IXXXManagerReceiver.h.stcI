stcI_HASH : Module_Name
stcI_FILEPREFIX : KEYManagerService/include/I
stcI_FILEPOSTFIX : ManagerReceiver
stcI_EXTENSION : h
Set : $iterate_comments = OFF
SetI : $MODULENAME = KEY
/*
 *   This software is copyright protected and proprietary to
 *   LG electronics. LGE grants to you only those rights as
 *   set out in the license conditions. All other rights remain
 *   with LG electronics.
 * \author  Jong Kyung Byun
 * \date    2017.11.14
 * \attention Copyright (c) 2015 by LG electronics co, Ltd. All rights reserved.
 */

#ifndef _I+<+uc($MODULENAME)+>+_MANAGER_RECEIVER_H_
#define  _I+<+uc($MODULENAME)+>+_MANAGER_RECEIVER_H_

#include <binder/IBinder.h>
#include <binder/IInterface.h>
#include <binder/Parcel.h>

#include "utils/Buffer.h"
#include "Typedef.h"
#include "TCUProtocol.h"
#include "+<+ucfirst($MODULENAME)+>+Command.h"

/**
 *
 * class I+<+ucfirst($MODULENAME)+>+ManagerReceiver
 *
 * virtual void onReceive(int32_t id, uint8_t cmd, uint8_t cmd2, Buffer& buf)
 *       id  : packet id. Module should response if id is not zero.
 *       cmd   : command 1
 *       cmd2 : command 2. This can be NULL.
 *       buf    : payload. This can be empty so need to check size.
 *
 *
 */
class I+<+ucfirst($MODULENAME)+>+ManagerReceiver: public android::IInterface
{
public:
    DECLARE_META_INTERFACE(+<+ucfirst($MODULENAME)+>+ManagerReceiver);

    virtual void onReceive(android::sp<+<+ucfirst($MODULENAME)+>+Data>& m+<+ucfirst($MODULENAME)+>+Data) =0;
    virtual void on+<+ucfirst($MODULENAME)+>+cmd(int32_t id, uint8_t type, uint8_t cmd, uint8_t cmd2, android::sp<Buffer>& buf) = 0;

    uint8_t targetModuleID=0x00U;
    appid_t targetAppID=0x00;
};

class Bn+<+ucfirst($MODULENAME)+>+ManagerReceiver: public android::BnInterface<I+<+ucfirst($MODULENAME)+>+ManagerReceiver>
{
public:
    virtual android::status_t onTransact(uint32_t code, const android::Parcel& data, android::Parcel* reply, uint32_t flags);
};
#endif /** _I+<+uc($MODULENAME)+>+_MANAGER_RECEIVER_H_*/

